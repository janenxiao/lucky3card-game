{"version":3,"sources":["imgs/iconCoins.svg","components/Sidebar.js","components/Player.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Sidebar","react_default","a","createElement","className","id","title","Component","Player","state","revealedCount","ante","anteEnabled","wager","playEnabled","roundResult","gameResult","incrementAnte","_this$state","_this","props","playerData","coins","alert","setState","incrementWager","_this$state2","handlePlay","isPlay","isUser","_this$state3","results","onPlay","length","handleNewRound","isNewGame","onNewRound","_this2","this","style","maxWidth","getCardContainerId","cards","map","card","src","process","getCardImg","getCardStyle","index","onClick","imgReveal","alt","concat","key","iconCoins","position","coinsUpdate","minWidth","typeOfHand","revealed","cardstr","onReveal","cardStyle","left","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fillInitialPlayerData","handList","userResult","pop","hands","hand","fillPlayerData","user","oppo","handleReveal","newUser","objectSpread","toConsumableArray","coinsChange","toString","newOppo","fillNewRoundPlayerData","arguments","undefined","fetch","then","response","status","console","log","json","data","bind","assertThisInitialized","catch","err","window","cardstrs","src_components_Sidebar","src_components_Player","marginTop","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"js/main.2fe3b37b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/iconCoins.1e91ff4b.svg\";","import React, { Component } from 'react';\r\nimport './Sidebar.css';\r\n\r\nclass Sidebar extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-3 d-none d-lg-block bg-light\" id=\"sidebar-wrapper\">\r\n        <div className=\"sidebar-sticky\">\r\n          <h6>Instructions</h6>\r\n          <ol>\r\n            <li>Learn the rules of <span className=\"font-italic\">Three Card Poker</span></li>\r\n            <li>Click on ANY of the 3 cards on the bottom to flip</li>\r\n            <li>Place ante before flipping the last card</li>\r\n            <li>Place wager and play, or fold. <span className=\"font-weight-light\">Wager can't be greater than ante.</span></li>\r\n            <li>If fold, ante will be deducted</li>\r\n            <li>If play, ante and wager will be paid or lost based on result</li>\r\n            <li>Opponent will gain or lose the same amount</li>\r\n          </ol>\r\n\r\n          <h6>Hand ranks</h6>\r\n          <ol>\r\n            <li title=\"Three cards of same suit in sequence\">Straight flush</li>\r\n            <li title=\"Three cards of same rank\">Three of a kind</li>\r\n            <li title=\"Three cards in sequence\">Straight</li>\r\n            <li title=\"Three cards of same suit\">Flush</li>\r\n            <li title=\"Two cards of same rank\">Pair</li>\r\n            <li>High card</li>\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;","import React, { Component } from 'react';\r\nimport './Player.css';\r\nimport iconCoins from '../imgs/iconCoins.svg';\r\n\r\n// require every file in the cards folder\r\n// const cardimgs = require.context('../../public/cards', false);\r\n// <img src={cardimgs(\"./4c.svg\")} />\r\n\r\nclass Player extends Component {\r\n  state = {\r\n    revealedCount: 0,\r\n    ante: 1,\r\n    anteEnabled: true,\r\n    wager: 1,\r\n    playEnabled: false,\r\n    roundResult: \"\",\r\n    gameResult: \"\"\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\" >\r\n        <div className=\"col-8\">\r\n          <div style={{ maxWidth: 353 }}>\r\n            <div id={this.getCardContainerId()}>\r\n              {this.props.playerData.cards.map(card => (\r\n                <img src={process.env.PUBLIC_URL + this.getCardImg(card)} style={this.getCardStyle(card.index)} className=\"img-fluid\" onClick={() => this.imgReveal(card)} alt={`card${card.index}`} key={`card${card.index}`} />\r\n              ))}\r\n              {this.state.roundResult !== \"\" && // only user will have roundResult and gameResult changed from empty\r\n                <img src={`${process.env.PUBLIC_URL}/img/${this.state.roundResult}.gif`} className=\"img-fluid\" id=\"roundResult-gif\" alt={this.state.roundResult} />\r\n              }\r\n              {this.state.gameResult !== \"\" &&\r\n                <div id=\"gameResult\" className={(this.state.gameResult === \"You win!\") ? \"darksalmonred\" : \"greyshadow\"}>{this.state.gameResult}</div>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-4 align-self-center\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <img src={iconCoins} className=\"img-fluid\" alt=\"Coins\" />\r\n              <span style={{ position: 'relative' }}>\r\n                <span className=\"m-2 font-weight-bold\">{this.props.playerData.coins}</span>\r\n                {this.props.playerData.coinsUpdate !== \"\" && <span id=\"coins-update\" className=\"m-2 font-weight-bold\">{this.props.playerData.coinsUpdate}</span>}\r\n              </span>\r\n            </div>\r\n            {this.props.playerData.isUser &&\r\n              <div className=\"col\" style={{ minWidth: 120 }}>\r\n                <div>\r\n                  <span className=\"font-weight-light w-33\">ante</span><span className=\"w-33 text-center\">{this.state.ante}</span>\r\n                  {this.state.anteEnabled && <button className=\"btn btn-warning btn-sm\" onClick={this.incrementAnte}>+</button>}\r\n                </div>\r\n                <div>\r\n                  <span className=\"font-weight-light w-33\">wager</span><span className=\"w-33 text-center\">{this.state.wager}</span>\r\n                  {this.state.playEnabled && <button className=\"btn btn-warning btn-sm\" onClick={this.incrementWager}>+</button>}\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          {this.props.playerData.coinsUpdate !== \"\" && <span className=\"m-2 font-weight-light\">{this.props.playerData.typeOfHand}</span>}\r\n          {(() => {\r\n            if (this.props.playerData.isUser) {\r\n              if (this.state.playEnabled) {\r\n                return (\r\n                  <div>\r\n                    <button className=\"btn btn-success m-2\" onClick={() => this.handlePlay(true)}>Play</button>\r\n                    <button className=\"btn btn-secondary m-2\" onClick={() => this.handlePlay(false)}>Fold</button>\r\n                  </div>);\r\n              }\r\n              else if (this.state.gameResult !== \"\") { // this game has ended\r\n                return (<button className=\"btn btn-success m-2\" onClick={this.handleNewRound}>New Game</button>);\r\n              }\r\n              else if (this.props.playerData.coinsUpdate !== \"\") {\r\n                return (<button className=\"btn btn-success m-2\" onClick={this.handleNewRound}>Continue</button>);\r\n              }\r\n            }\r\n          })()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getCardImg(card) {\r\n    return card.revealed ? `/cards/${card.cardstr}.svg` : \"/cards/cardback.svg\"\r\n  }\r\n\r\n  imgReveal(card) {\r\n    if (this.props.playerData.isUser && !card.revealed) {\r\n      const { revealedCount } = this.state;\r\n      // when revealing the third card, disable incrementAnte button, show incrementWager button and play and fold button\r\n      if (revealedCount === 2) {\r\n        this.setState({ anteEnabled: false, playEnabled: true });\r\n      }\r\n      this.setState({ revealedCount: revealedCount + 1 });\r\n      this.props.onReveal(card);\r\n    }\r\n  }\r\n\r\n  getCardStyle(index) {\r\n    const left = `${index * 16}%`;\r\n    let cardStyle = {\r\n      left: left\r\n    }\r\n    // position 'absolute' makes element disregard grid rules, like it flows on top of other elements\r\n    // thus need one card hold the position, other card can flow (stack) on top of it\r\n    if (index !== 0)\r\n      cardStyle.position = 'absolute';\r\n    return cardStyle\r\n  }\r\n\r\n  getCardContainerId() {\r\n    return \"cardcontainer-\" + (this.props.playerData.isUser ? \"user\" : \"oppo\");\r\n  }\r\n\r\n  incrementAnte = () => {\r\n    const { ante, wager } = this.state;\r\n    if (ante + wager >= this.props.playerData.coins)\r\n      alert(\"Hey that's all the money you've got to ante!\");\r\n    else\r\n      this.setState({ ante: this.state.ante + 1 });\r\n  }\r\n\r\n  incrementWager = () => {\r\n    const { ante, wager } = this.state;\r\n    if (ante + wager >= this.props.playerData.coins)\r\n      alert(\"Hey that's all the money you've got to bet!\");\r\n    else if (wager >= ante)\r\n      alert(\"Hey wager can't be more than ante\");\r\n    else\r\n      this.setState({ wager: this.state.wager + 1 });\r\n  }\r\n\r\n  handlePlay = isPlay => {\r\n    if (this.props.playerData.isUser) {\r\n      const { ante, wager } = this.state;\r\n      const results = this.props.onPlay(isPlay, ante, wager);\r\n\r\n      const roundResult = results[0];\r\n      if (results.length > 1)\r\n        this.setState({ gameResult: results[1] });\r\n\r\n      this.setState({\r\n        ante: 0,\r\n        wager: 0,\r\n        playEnabled: false,\r\n        roundResult\r\n      });\r\n    }\r\n  }\r\n\r\n  handleNewRound = () => {\r\n    if (this.props.playerData.isUser) {\r\n      const isNewGame = this.state.gameResult !== \"\";\r\n      this.props.onNewRound(isNewGame);\r\n\r\n      // when player only has 1 coin, it will be used as ante, so wager should be 0\r\n      const wager = (!isNewGame && this.props.playerData.coins < 2) ? 0 : 1;\r\n      // set to initial state\r\n      this.setState({\r\n        revealedCount: 0,\r\n        ante: 1,\r\n        anteEnabled: true,\r\n        wager: wager,\r\n        roundResult: \"\",\r\n        gameResult: \"\"\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Player;","import React, { Component } from 'react';\n//import './App.css';\nimport Sidebar from './components/Sidebar';\nimport Player from './components/Player';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    if (\"handList\" in window)\n      this.fillInitialPlayerData(window.handList);\n    else { // since fetch() returns a Promise, we first initiate state to random data then update with fetched data\n      let handList = [[\"6c\", \"4d\", \"10h\", \"High card\", \"lose\"], [\"12c\", \"7h\", \"10s\", \"High card\"]];\n      this.fillInitialPlayerData(handList);\n\n      this.handleNewRound(false);\n    }\n  }\n\n  fillPlayerData(cardstrs, coins = 10) {\n    const typeOfHand = cardstrs.pop();\n    let cards = cardstrs.map((cardstr, index) => ({ index: index, revealed: false, cardstr: cardstr }));\n    let playerData = {\n      coins: coins,\n      coinsUpdate: \"\",\n      typeOfHand: typeOfHand,\n      cards: cards\n    };\n    return playerData;\n  }\n\n  fillInitialPlayerData = handList => {\n    const userResult = handList[0].pop();\n    let hands = handList.map(hand => this.fillPlayerData(hand));\n    hands[0].isUser = true;\n    hands[1].isUser = false;\n    this.state = {\n      user: hands[0],\n      oppo: hands[1],\n      userResult: userResult\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row justify-content-end\">\n          <Sidebar />\n          <div className=\"col col-lg-9\">\n            <Player playerData={this.state.oppo} />\n            <div style={{ marginTop: '20vh' }}>\n              <Player playerData={this.state.user} onReveal={this.handleReveal} onPlay={this.handlePlay} onNewRound={this.handleNewRound} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  handleReveal = card => {\n    const newUser = { ...this.state.user };\n    newUser.cards = [...newUser.cards];\n    newUser.cards[card.index] = { ...card };\n    newUser.cards[card.index].revealed = true;\n    this.setState({\n      user: newUser\n    });\n  }\n\n  handlePlay = (isPlay, ante, wager) => {\n    const newUser = { ...this.state.user };\n    let roundResult, results, coinsChange;\n\n    if (isPlay) {\n      if (this.state.userResult === \"win\") {\n        coinsChange = ante + wager;\n        roundResult = \"playwin\";\n      }\n      else if (this.state.userResult === \"lose\") {\n        coinsChange = -1 * (ante + wager);\n        roundResult = \"playlose\";\n      }\n      else { // tie\n        coinsChange = 0;\n        roundResult = \"tie\";\n      }\n    }\n    else { // user folded\n      coinsChange = -1 * ante;\n      roundResult = (this.state.userResult === \"lose\") ? \"foldlose\" : \"foldwin\";\n    }\n    newUser.coins += coinsChange;\n    newUser.coinsUpdate = ((coinsChange >= 0) ? \"+\" : \"\") + coinsChange.toString();\n\n    // Reveal opponent's cards and update opponent's coins\n    const newOppo = { ...this.state.oppo };\n    // deep clone the array of cards by cloning each card\n    newOppo.cards = newOppo.cards.map(card => ({ ...card, ...{ revealed: true } }));\n    coinsChange = -1 * coinsChange;\n    newOppo.coins += coinsChange;\n    newOppo.coinsUpdate = ((coinsChange >= 0) ? \"+\" : \"\") + coinsChange.toString();\n\n    if (newUser.coins <= 0)\n      results = [roundResult, \"Good game\"];\n    else if (newOppo.coins <= 0)\n      results = [roundResult, \"You win!\"];\n    else\n      results = [roundResult];\n\n    this.setState({\n      user: newUser,\n      oppo: newOppo\n    });\n\n    return results;\n  }\n\n  fillNewRoundPlayerData = (handList, isNewGame = false) => {\n    const userResult = handList[0].pop();\n    let user, oppo;\n    if (isNewGame) { // if starting a new game, reset coins to initial state\n      user = this.fillPlayerData(handList[0]);\n      oppo = this.fillPlayerData(handList[1]);\n    }\n    else {\n      user = this.fillPlayerData(handList[0], this.state.user.coins);\n      oppo = this.fillPlayerData(handList[1], this.state.oppo.coins);\n    }\n    user.isUser = true;\n    oppo.isUser = false;\n    this.setState({\n      user,\n      oppo,\n      userResult\n    });\n  }\n\n  handleNewRound = isNewGame => {\n    const fetchURL = '/get_handList';\n    fetch(fetchURL)\n      // the callback function's this keyword is bound to handleNewRound()'s this keyword, which was inherited from the App class\n      .then(function (response) {\n        if (response.status !== 200) {\n          console.log('Fetch Error: Status Code: ' + response.status);\n          alert('Fetch Error: Status Code: ' + response.status);\n          return;\n        }\n        // if request success \n        response.json().then(data => this.fillNewRoundPlayerData(data, isNewGame));\n      }.bind(this))\n      .catch(function (err) {\n        console.log('Fetch Error: ', err);\n        alert('Fetch Error: ', err);\n      });\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}